@using FDNE.PE.WEB.ADMIN.ViewModels
@model LoginViewModel
@{
    Layout = "~/Views/Shared/_LoginLayout.cshtml";
    ViewBag.Title = "Iniciar Sesión";
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card-group">
                <div class="card p-4">
                    @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { id = "login-form", @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="card-body">
                            <h1>Iniciar Sesi&oacute;n</h1>
                            <p class="text-muted">Inicia sesi&oacute;n con tus credenciales</p>
                            <div id="signin_errors" class="alert alert-danger" style="display: @(!Html.ViewData.ModelState.IsValid ? "block" : "none")">
                                @Html.ValidationSummary(false, "")
                            </div>
                            <div class="input-group mb-3">
                                <div class="input-group-prepend">
                                    <span class="input-group-text">
                                        <i class="icon-user"></i>
                                    </span>
                                </div>
                                @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", type = "text", placeholder = "Usuario", required = "required" })
                            </div>
                            <div class="input-group mb-4">
                                <div class="input-group-prepend">
                                    <span class="input-group-text">
                                        <i class="icon-lock"></i>
                                    </span>
                                </div>
                                @Html.TextBoxFor(m => m.Password, new { @class = "form-control", type = "password", placeholder = "Contraseña", required = "required" })
                            </div>
                            <div class="row">
                                @*<div class="col-12 col-md-6 order-1 order-md-0 text-left">
                                    <button class="btn btn-link px-0" type="button">¿Olvidaste tu contrase&ntilde;a?</button>
                                </div>*@
                                <div class="col-12 col-md-12 order-0 order-md-1 text-right">
                                    <button class="btn btn-primary px-4 ladda-button" data-style="zoom-out" type="submit">
                                        <span class="ladda-label">
                                            <i class="fa fa-sign-in"></i>&emsp;Ingresar
                                        </span>
                                    </button>
                                </div>
                            </div>
                        </div>
                    }
                </div>
                <div class="card text-white bg-primary py-5 d-md-down-none" style="width:44%">
                        <div class="card-body text-center">
                            <div>
                                <h2>Registro</h2>
                                <p>¿Eres un administrador de club?<br />¿Aún no tienes una cuenta?</p>
                                <a class="btn btn-primary active mt-3" href="@Url.Action("Register","ClubAdministrator", new { Area = "Admin"})">Registrate aqui!</a>
                            </div>
                        </div>
                    </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let submitted = false;
        let laddaBtn = Ladda.create($("#login-form button[type='submit']")[0]);
        var form = $("#login-form").validate({
            messages: {
                UserName: "El campo 'Usuario' es obligatorio.",
                Password: "El campo 'Contraseña' es obligatorio."
            },
            submitHandler: function (formElement, e) {
                $("#signin_errors").hide();
                laddaBtn.start();
                e.preventDefault();
                formElement.submit();
            },
            showErrors: function (errorMap, errorList) {
                if (submitted) {
                    var summary = "El formulario presenta los siguientes errores: <br/><ul>";
                    $.each(errorList, function (i) { summary += "<li id='" + errorList[i].element.id + "_Error'>" + this.message + " " + "</li>"; });
                    summary += "</ul>"
                    $("#signin_errors").html(summary);
                    $("#signin_errors").show();
                    submitted = false;
                }
            },
            invalidHandler: function (form, validator) {
                submitted = true;
            },
            success: function (label, elem) {
                $(`#${elem.id}_Error`).html("");
            }
        });
    </script>
}